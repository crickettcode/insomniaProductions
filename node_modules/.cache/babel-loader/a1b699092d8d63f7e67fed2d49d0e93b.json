{"ast":null,"code":"import _classCallCheck from \"/Users/jonathanbeatty/Documents/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jonathanbeatty/Documents/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jonathanbeatty/Documents/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jonathanbeatty/Documents/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/jonathanbeatty/Documents/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/jonathanbeatty/Documents/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jonathanbeatty/Documents/my-app/src/ProjectButton.js\";\nimport React, { Component } from 'react';\nimport Button from './Button';\nimport ReactDOM from 'react-dom';\nimport { NONAME } from 'dns';\n\nvar ProjectButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProjectButton, _Component);\n\n  function ProjectButton(props) {\n    var _this;\n\n    _classCallCheck(this, ProjectButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProjectButton).call(this, props));\n    _this.state = {\n      color: [6, 100, 85],\n      outline: none\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProjectButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.applyColor();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this.applyColor();\n    }\n  }, {\n    key: \"formatColor\",\n    value: function formatColor(ary) {\n      return 'rgb(' + ary.join(', ') + ')';\n    }\n  }, {\n    key: \"isLight\",\n    value: function isLight() {\n      var rgb = this.state.color;\n      return rgb.reduce(function (a, b) {\n        return a + b;\n      }) < 127 * 3;\n    }\n  }, {\n    key: \"applyColor\",\n    value: function applyColor() {\n      var color = this.formatColor(this.state.color);\n      document.body.style.background = color;\n    }\n  }, {\n    key: \"chooseColor\",\n    value: function chooseColor() {\n      var random = [];\n\n      for (var i = 0; i < 3; i++) {\n        random.push(Math.floor(Math.random() * 256));\n      }\n\n      return random;\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick() {\n      this.setState({\n        color: this.chooseColor()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: this.isLight() ? 'white' : 'black',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.formatColor(this.state.color)), React.createElement(Button, {\n        onClick: this.handleClick,\n        light: this.isLight(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProjectButton;\n}(Component);\n\nexport default ProjectButton;","map":{"version":3,"sources":["/Users/jonathanbeatty/Documents/my-app/src/ProjectButton.js"],"names":["React","Component","Button","ReactDOM","NONAME","ProjectButton","props","state","color","outline","none","handleClick","bind","applyColor","prevProps","prevState","ary","join","rgb","reduce","a","b","formatColor","document","body","style","background","random","i","push","Math","floor","setState","chooseColor","isLight"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,KAAvB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC,CAAC,CAAD,EAAG,GAAH,EAAO,EAAP,CADK;AAEXC,MAAAA,OAAO,EAACC;AAFG,KAAb;AAIA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB;AANgB;AAOjB;;;;wCAEmB;AAClB,WAAKC,UAAL;AACD;;;uCAEkBC,S,EAAWC,S,EAAW;AACvC,WAAKF,UAAL;AACD;;;gCAEWG,G,EAAK;AACf,aAAO,SAASA,GAAG,CAACC,IAAJ,CAAS,IAAT,CAAT,GAA0B,GAAjC;AACD;;;8BAES;AACR,UAAMC,GAAG,GAAG,KAAKX,KAAL,CAAWC,KAAvB;AACA,aAAOU,GAAG,CAACC,MAAJ,CAAW,UAACC,CAAD,EAAGC,CAAH;AAAA,eAASD,CAAC,GAACC,CAAX;AAAA,OAAX,IAA2B,MAAM,CAAxC;AACD;;;iCAEY;AACX,UAAMb,KAAK,GAAG,KAAKc,WAAL,CAAiB,KAAKf,KAAL,CAAWC,KAA5B,CAAd;AACAe,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,UAApB,GAAiClB,KAAjC;AACD;;;kCAEa;AACZ,UAAMmB,MAAM,GAAG,EAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BD,QAAAA,MAAM,CAACE,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,KAAc,GAAzB,CAAZ;AACD;;AACD,aAAOA,MAAP;AACD;;;kCAEa;AACZ,WAAKK,QAAL,CAAc;AACZxB,QAAAA,KAAK,EAAC,KAAKyB,WAAL;AADM,OAAd;AAGD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAE,KAAKC,OAAL,KAAiB,OAAjB,GAA2B,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKZ,WAAL,CAAiB,KAAKf,KAAL,CAAWC,KAA5B,CADL,CADF,EAIN,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAG,KAAKG,WAAvB;AAAoC,QAAA,KAAK,EAAG,KAAKuB,OAAL,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJM,CADF;AAQD;;;;EAvDyBjC,S;;AA0D5B,eAAeI,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport Button from './Button';\nimport ReactDOM from 'react-dom';\nimport { NONAME } from 'dns';\n\nclass ProjectButton extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      color:[6,100,85],\n      outline:none\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  \n  componentDidMount() {\n    this.applyColor();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.applyColor();\n  }\n\n  formatColor(ary) {\n    return 'rgb(' + ary.join(', ') + ')';\n  }\n\n  isLight() {\n    const rgb = this.state.color;\n    return rgb.reduce((a,b) => a+b) < 127 * 3;\n  }\n\n  applyColor() {\n    const color = this.formatColor(this.state.color);\n    document.body.style.background = color;\n  }\n\n  chooseColor() {\n    const random = [];\n    for (let i = 0; i < 3; i++) {\n      random.push(Math.floor(Math.random()*256));\n    }\n    return random;\n  }\n  \n  handleClick() {\n    this.setState({\n      color:this.chooseColor()\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h6 className={this.isLight() ? 'white' : 'black'}>\n            {this.formatColor(this.state.color)}\n        </h6>\n<Button onClick ={this.handleClick} light ={this.isLight()}/>\n      </div>\n    );\n  }\n}\n\nexport default ProjectButton;"]},"metadata":{},"sourceType":"module"}